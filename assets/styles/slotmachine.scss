.slot-container {
  display: inline-flex;
  border-radius: 1rem;
  overflow: hidden;
  position: relative;
  border: solid 4px $white;
  visibility: hidden;
}
.slot-container:before {
  background: linear-gradient(to bottom,  rgba(26, 39, 64,0.7) 0%,rgba(26, 39, 64,0) 100%);
  position: absolute;
  top:0; left:0;
  width: 100%;
  height: 30%;
  content: '';
  z-index: 1;
}
.slot-container:after {
  background: linear-gradient(to top,  rgba(26, 39, 64,0.7) 0%,rgba(26, 39, 64,0) 100%);
  position: absolute;
  bottom:0; left:0;
  width: 100%;
  height: 30%;
  content: '';
  z-index: 1;
}

.slot {
  margin: 0;
}

.slot-window {
  overflow: hidden;
  box-sizing: border-box;
  border-right: 1px solid $secondary;
  border-left: 1px solid $secondary;
}

.slot-item {
  display: flex;
  align-items: center;
  text-align: center;
  background-color: $primary;
}

.win {
  display: none;
}
.win-line {
  position: absolute;
  height: 8px;
  width: 94%;
  left: 3%;
  border-radius: 4px;
  background: $yellow;
  box-shadow: 0 4px 5px 0 rgba(0,0,0,0.6);
  z-index: 10;
}
.win-line-0 {
  top: 25%;
  display: none;
}
.win-line-1 {
  top: 49%;
  display: none;
}
.win-line-2 {
  top: 75%;
  display: none;
}

.debug {
  background: $light;
  color: $secondary;
}
.btn-debug {
  padding: 5px;
  margin: 0;
  cursor: pointer;
}

.debug .btn-balance-debug,
.debug select,
.debug input[type='number'] {
  padding: .2rem;
  border: 1px solid $secondary;
  border-radius: .2rem;
  margin-right: .1rem;
}

.debug input[type='radio'] {
  transform: scale(1.2);
  margin-left:0;
}

[v-cloak] {
  display: none !important;
}

@keyframes blink {
  50% { opacity: 0.8; }
}
.blink {
  animation: blink 1s step-start 0s infinite;
}

@keyframes pulse_animation {
  0% { transform: scale(1); }
  30% { transform: scale(1.02); }
  40% { transform: scale(1.03); }
  50% { transform: scale(1); }
  60% { transform: scale(1); }
  70% { transform: scale(1.03); }
  80% { transform: scale(1.02); }
  100% { transform: scale(1); }
}
.pulse {
  animation: pulse_animation 1s infinite;
}